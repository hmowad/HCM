
package com.code.integration.webservicesclients.infosys;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.code.services.config.ETRConfigurationService;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035 Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "HCMWebServiceService",
	targetNamespace = "http://labcheck.infosys.services.code.com/",
	wsdlLocation = "http://34.243.128.248:8031/InfoSys/HCMWebServiceService?WSDL")
public class HCMWebServiceService
	extends Service {

    private final static URL HCMWEBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException HCMWEBSERVICESERVICE_EXCEPTION;
    private final static QName HCMWEBSERVICESERVICE_QNAME = new QName("http://labcheck.infosys.services.code.com/", "HCMWebServiceService");

    static {
	URL url = null;
	WebServiceException e = null;
	try {
	    url = new URL(ETRConfigurationService.getHCMWebServiceWSDLLocation());
	} catch (MalformedURLException ex) {
	    e = new WebServiceException(ex);
	}
	HCMWEBSERVICESERVICE_WSDL_LOCATION = url;
	HCMWEBSERVICESERVICE_EXCEPTION = e;
    }

    public HCMWebServiceService() {
	super(__getWsdlLocation(), HCMWEBSERVICESERVICE_QNAME);
    }

    public HCMWebServiceService(WebServiceFeature... features) {
	super(__getWsdlLocation(), HCMWEBSERVICESERVICE_QNAME, features);
    }

    public HCMWebServiceService(URL wsdlLocation) {
	super(wsdlLocation, HCMWEBSERVICESERVICE_QNAME);
    }

    public HCMWebServiceService(URL wsdlLocation, WebServiceFeature... features) {
	super(wsdlLocation, HCMWEBSERVICESERVICE_QNAME, features);
    }

    public HCMWebServiceService(URL wsdlLocation, QName serviceName) {
	super(wsdlLocation, serviceName);
    }

    public HCMWebServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
	super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return returns HCMWebService
     */
    @WebEndpoint(name = "HCMWebServicePort")
    public HCMWebService getHCMWebServicePort() {
	return super.getPort(new QName("http://labcheck.infosys.services.code.com/", "HCMWebServicePort"), HCMWebService.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns HCMWebService
     */
    @WebEndpoint(name = "HCMWebServicePort")
    public HCMWebService getHCMWebServicePort(WebServiceFeature... features) {
	return super.getPort(new QName("http://labcheck.infosys.services.code.com/", "HCMWebServicePort"), HCMWebService.class, features);
    }

    private static URL __getWsdlLocation() {
	if (HCMWEBSERVICESERVICE_EXCEPTION != null) {
	    throw HCMWEBSERVICESERVICE_EXCEPTION;
	}
	return HCMWEBSERVICESERVICE_WSDL_LOCATION;
    }

}
