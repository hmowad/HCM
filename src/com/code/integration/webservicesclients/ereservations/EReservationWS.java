
package com.code.integration.webservicesclients.ereservations;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EReservationWS", targetNamespace = "http://webservice.services.code.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EReservationWS {


    /**
     * 
     * @param socialId
     * @return
     *     returns com.code.integration.webservicesclients.ereservations.AirportsResult
     */
    @WebMethod
    @WebResult(name = "airportsResult", targetNamespace = "")
    @RequestWrapper(localName = "getAirports", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetAirports")
    @ResponseWrapper(localName = "getAirportsResponse", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetAirportsResponse")
    @Action(input = "http://webservice.services.code.com/EReservationWS/getAirportsRequest", output = "http://webservice.services.code.com/EReservationWS/getAirportsResponse")
    public AirportsResult getAirports(
        @WebParam(name = "socialId", targetNamespace = "")
        String socialId);

    /**
     * 
     * @return
     *     returns java.util.List<com.code.integration.webservicesclients.ereservations.MealResult>
     */
    @WebMethod
    @WebResult(name = "mealsEnumListResult", targetNamespace = "")
    @RequestWrapper(localName = "getMeals", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetMeals")
    @ResponseWrapper(localName = "getMealsResponse", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetMealsResponse")
    @Action(input = "http://webservice.services.code.com/EReservationWS/getMealsRequest", output = "http://webservice.services.code.com/EReservationWS/getMealsResponse")
    public List<MealResult> getMeals();

    /**
     * 
     * @param goingLegInstancesIds
     * @param contactEmail
     * @param socialId
     * @param mealEnumCode
     * @param waitingFlight
     * @param contactPhone
     * @param transportationEnum
     * @param returnLegInstancesIds
     * @return
     *     returns com.code.integration.webservicesclients.ereservations.BookingsResult
     */
    @WebMethod
    @WebResult(name = "ticketsListResult", targetNamespace = "")
    @RequestWrapper(localName = "bookFlight", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.BookFlight")
    @ResponseWrapper(localName = "bookFlightResponse", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.BookFlightResponse")
    @Action(input = "http://webservice.services.code.com/EReservationWS/bookFlightRequest", output = "http://webservice.services.code.com/EReservationWS/bookFlightResponse")
    public BookingsResult bookFlight(
        @WebParam(name = "socialId", targetNamespace = "")
        String socialId,
        @WebParam(name = "contactPhone", targetNamespace = "")
        String contactPhone,
        @WebParam(name = "contactEmail", targetNamespace = "")
        String contactEmail,
        @WebParam(name = "mealEnumCode", targetNamespace = "")
        MealEnum mealEnumCode,
        @WebParam(name = "TransportationEnum", targetNamespace = "")
        TransportationEnum transportationEnum,
        @WebParam(name = "goingLegInstancesIds", targetNamespace = "")
        String goingLegInstancesIds,
        @WebParam(name = "returnLegInstancesIds", targetNamespace = "")
        String returnLegInstancesIds,
        @WebParam(name = "waitingFlight", targetNamespace = "")
        boolean waitingFlight);

    /**
     * 
     * @param previousFlightsFlag
     * @param socialId
     * @return
     *     returns com.code.integration.webservicesclients.ereservations.BookingsResult
     */
    @WebMethod
    @WebResult(name = "bookingsListResult", targetNamespace = "")
    @RequestWrapper(localName = "getBookings", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetBookings")
    @ResponseWrapper(localName = "getBookingsResponse", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetBookingsResponse")
    @Action(input = "http://webservice.services.code.com/EReservationWS/getBookingsRequest", output = "http://webservice.services.code.com/EReservationWS/getBookingsResponse")
    public BookingsResult getBookings(
        @WebParam(name = "socialId", targetNamespace = "")
        String socialId,
        @WebParam(name = "previousFlightsFlag", targetNamespace = "")
        boolean previousFlightsFlag);

    /**
     * 
     * @param ticketNumber
     * @return
     *     returns com.code.integration.webservicesclients.ereservations.CancelResult
     */
    @WebMethod
    @WebResult(name = "cancelResult", targetNamespace = "")
    @RequestWrapper(localName = "cancelBooking", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.CancelBooking")
    @ResponseWrapper(localName = "cancelBookingResponse", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.CancelBookingResponse")
    @Action(input = "http://webservice.services.code.com/EReservationWS/cancelBookingRequest", output = "http://webservice.services.code.com/EReservationWS/cancelBookingResponse")
    public CancelResult cancelBooking(
        @WebParam(name = "ticketNumber", targetNamespace = "")
        String ticketNumber);

    /**
     * 
     * @param toAirportId
     * @param returnDate
     * @param socialId
     * @param departureDate
     * @param fromAirportId
     * @return
     *     returns com.code.integration.webservicesclients.ereservations.FlightsResult
     */
    @WebMethod
    @WebResult(name = "availableFlightsResult", targetNamespace = "")
    @RequestWrapper(localName = "getFlights", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetFlights")
    @ResponseWrapper(localName = "getFlightsResponse", targetNamespace = "http://webservice.services.code.com/", className = "com.code.integration.webservicesclients.ereservations.GetFlightsResponse")
    @Action(input = "http://webservice.services.code.com/EReservationWS/getFlightsRequest", output = "http://webservice.services.code.com/EReservationWS/getFlightsResponse")
    public FlightsResult getFlights(
        @WebParam(name = "socialId", targetNamespace = "")
        String socialId,
        @WebParam(name = "fromAirportId", targetNamespace = "")
        long fromAirportId,
        @WebParam(name = "toAirportId", targetNamespace = "")
        long toAirportId,
        @WebParam(name = "departureDate", targetNamespace = "")
        String departureDate,
        @WebParam(name = "returnDate", targetNamespace = "")
        String returnDate);

}
