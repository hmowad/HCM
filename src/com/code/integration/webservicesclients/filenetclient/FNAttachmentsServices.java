
package com.code.integration.webservicesclients.filenetclient;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FNAttachmentsServices", targetNamespace = "http://services.archms.fg.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FNAttachmentsServices {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<java.lang.String>
     */
    @WebMethod(operationName = "attachDocument")
    public Response<String> attachDocumentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "attachDocument")
    public Future<?> attachDocumentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<String> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public String attachDocument(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.code.integration.webservicesclients.filenetclient.FnAttachment>
     */
    @WebMethod(operationName = "getAttachedDocmentByID")
    public Response<FnAttachment> getAttachedDocmentByIDAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getAttachedDocmentByID")
    public Future<?> getAttachedDocmentByIDAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<FnAttachment> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns com.code.integration.webservicesclients.filenetclient.FnAttachment
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FnAttachment getAttachedDocmentByID(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.code.integration.webservicesclients.filenetclient.FnAttachment>
     */
    @WebMethod(operationName = "getAttachedDocmentByVersionNo")
    public Response<FnAttachment> getAttachedDocmentByVersionNoAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getAttachedDocmentByVersionNo")
    public Future<?> getAttachedDocmentByVersionNoAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<FnAttachment> asyncHandler);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns com.code.integration.webservicesclients.filenetclient.FnAttachment
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FnAttachment getAttachedDocmentByVersionNo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.code.integration.webservicesclients.filenetclient.FnAttachment>
     */
    @WebMethod(operationName = "getCurrentAttachedDocment")
    public Response<FnAttachment> getCurrentAttachedDocmentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getCurrentAttachedDocment")
    public Future<?> getCurrentAttachedDocmentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<FnAttachment> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns com.code.integration.webservicesclients.filenetclient.FnAttachment
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FnAttachment getCurrentAttachedDocment(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<java.lang.Boolean>
     */
    @WebMethod(operationName = "deleteAttachedDocument")
    public Response<Boolean> deleteAttachedDocumentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "deleteAttachedDocument")
    public Future<?> deleteAttachedDocumentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<Boolean> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public boolean deleteAttachedDocument(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<java.lang.Boolean>
     */
    @WebMethod(operationName = "deleteAllAttachedDocument")
    public Response<Boolean> deleteAllAttachedDocumentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "deleteAllAttachedDocument")
    public Future<?> deleteAllAttachedDocumentAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<Boolean> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public boolean deleteAllAttachedDocument(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<java.lang.Boolean>
     */
    @WebMethod(operationName = "deleteAttachedDocumentByVersionNo")
    public Response<Boolean> deleteAttachedDocumentByVersionNoAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "deleteAttachedDocumentByVersionNo")
    public Future<?> deleteAttachedDocumentByVersionNoAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<Boolean> asyncHandler);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public boolean deleteAttachedDocumentByVersionNo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.code.integration.webservicesclients.filenetclient.FnAttachment>
     */
    @WebMethod(operationName = "addNewDocumentVersion")
    public Response<FnAttachment> addNewDocumentVersionAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "addNewDocumentVersion")
    public Future<?> addNewDocumentVersionAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<FnAttachment> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns com.code.integration.webservicesclients.filenetclient.FnAttachment
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FnAttachment addNewDocumentVersion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.code.integration.webservicesclients.filenetclient.FnAttachment>
     */
    @WebMethod(operationName = "getDocmentVersions")
    public Response<FnAttachment> getDocmentVersionsAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getDocmentVersions")
    public Future<?> getDocmentVersionsAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<FnAttachment> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns com.code.integration.webservicesclients.filenetclient.FnAttachment
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FnAttachment getDocmentVersions(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<java.lang.Boolean>
     */
    @WebMethod(operationName = "updateDocumentMetadata")
    public Response<Boolean> updateDocumentMetadataAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "updateDocumentMetadata")
    public Future<?> updateDocumentMetadataAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<Boolean> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public boolean updateDocumentMetadata(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.code.integration.webservicesclients.filenetclient.FnAttachment>
     */
    @WebMethod(operationName = "searchDocumentByMetadata")
    public Response<FnAttachment> searchDocumentByMetadataAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "searchDocumentByMetadata")
    public Future<?> searchDocumentByMetadataAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<FnAttachment> asyncHandler);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns com.code.integration.webservicesclients.filenetclient.FnAttachment
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FnAttachment searchDocumentByMetadata(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        FnAttachment arg2)
        throws Exception_Exception
    ;

}
